{"version":3,"sources":["images/spinner.svg","components/Header/Header.js","components/Home/Home.js","api/api.js","components/Filters/Filters.js","components/Character/Character.js","components/Pagination/Pagination.js","components/Characters/Characters.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","links","react_default","a","createElement","react_router_dom","activeClassName","exact","to","className","this","map","link","i","key","Component","Home","URLS","getData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","arguments","createLinkForRequest","objAttributes","searchParams","URLSearchParams","keys","forEach","property","set","toString","getCharacters","_ref2","_callee2","createdUrl","data","currentPage","_args2","_context2","length","undefined","pagePrevLink","info","_x2","Filters","props","onSubmit","handleSubmit","name","type","placeholder","onChange","handleChange","defaultValue","searchValue","genderValue","value","speciesValue","Character","src","imageSrc","alt","species","gender","Pagination","paginationArray","current","total","list","lowerLimit","Math","min","upperLimit","b","push","getPaginationArray","pages","onClick","handleClick","pageNumber","classNames","active","Characters","state","search","characters","isLoaded","handlePaginationClick","event","clickedPageNumber","reqAttributes","target","textContent","_this","setState","getObjectForRequest","results","handleInputChange","_event$target","defineProperty","handleFormSubmit","preventDefault","_ref3","page","_this$state","components_Filters_Filters","character","components_Character_Character","id","image","components_Pagination_Pagination","loaderImage","App","components_Header_Header","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc4b48b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.d038f2af.svg\";","import React, { Component } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n  links = [\r\n    <NavLink activeClassName=\"is-active\" exact to=\"/\">Home</NavLink>,\r\n    <NavLink activeClassName=\"is-active\" to=\"/characters/\">Characters</NavLink>,\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <nav>\r\n          <ul className=\"nav-list\">\r\n            {this.links.map((link, i) => (\r\n              <li className=\"nav-list-item\" key={i}>\r\n                {link}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-title\">\r\n        <h1>Hi! This is my Rick & Morty React App</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const URLS = {\r\n  characters: 'https://rickandmortyapi.com/api/character/?',\r\n  locations: 'https://rickandmortyapi.com/api/location',\r\n  episodes: 'https://rickandmortyapi.com/api/episode',\r\n}\r\n\r\n\r\nconst getData = async url => {\r\n  const response = await fetch(url);\r\n  const result = await response.json();\r\n  \r\n  return result;\r\n}\r\n\r\nconst getCurrentPage = (pagePrevLink) => {\r\n  return pagePrevLink ? 1 : +(pagePrevLink + 1);\r\n}\r\n\r\nconst createLinkForRequest = (objAttributes, url) => {\r\n  let searchParams = new URLSearchParams();\r\n\r\n  if (objAttributes) {\r\n    Object.keys(objAttributes).forEach(property => {\r\n      if (objAttributes[property]) {\r\n        searchParams.set(property, objAttributes[property]);\r\n      }\r\n    })\r\n  }\r\n\r\n  return url + searchParams.toString();\r\n}\r\n\r\nexport const getCharacters = async (objAttributes, url = URLS.characters) => {\r\n  const createdUrl = await createLinkForRequest(objAttributes, url);\r\n  const data = await getData(createdUrl);\r\n  const currentPage = getCurrentPage(data.info.prev);\r\n\r\n  data.info.currentPage = currentPage;\r\n  \r\n  return data;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Filters.css\";\r\n\r\nconst Filters = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"filter-form\">\r\n      <input\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"filter-search\"\r\n        placeholder=\"Enter name\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.searchValue}\r\n      />\r\n      <select\r\n        name=\"gender\"\r\n        className=\"filter-select\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.genderValue}\r\n      >\r\n        <option value=\"\">All</option>\r\n        <option value=\"female\">female</option>\r\n        <option value=\"male\">male</option>\r\n        <option value=\"genderless\">genderless</option>\r\n        <option value=\"unknown\">unknown</option>\r\n      </select>\r\n      <select\r\n        name=\"species\"\r\n        className=\"filter-select\"\r\n        onChange={props.handleChange}\r\n        defaultValue={props.speciesValue}\r\n      >\r\n        <option value=\"\">All</option>\r\n        <option value=\"human\">human</option>\r\n        <option value=\"alien\">alien</option>\r\n      </select>\r\n      <input type=\"submit\" value=\"Filter\" className=\"filter-submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nimport \"./Character.css\";\r\n\r\nconst Character = props => (\r\n  <div className=\"card\">\r\n    <img className=\"card-image\" src={props.imageSrc} alt=\"character\" />\r\n    <h2 className=\"card-name\">{props.name}</h2>\r\n    <p className=\"card-species\">Species: {props.species}</p>\r\n    <p className=\"card-gender\">Gender: {props.gender}</p>\r\n  </div>\r\n);\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\n\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport \"./Pagination.css\";\r\n\r\nconst getPaginationArray = (current, total) => {\r\n  let list = [];\r\n  let lowerLimit = Math.min(current, total);\r\n  let upperLimit = Math.min(current, total);\r\n  const PAGE_LIMIT = 3;\r\n\r\n  for (let b = 1; b < PAGE_LIMIT && b < total; b++) {\r\n    if (lowerLimit > 1) {\r\n      lowerLimit--;\r\n    }\r\n    if (b < PAGE_LIMIT && upperLimit < total) {\r\n      upperLimit++;\r\n    }\r\n  }\r\n\r\n  for (let i = lowerLimit; i <= upperLimit; i++) {\r\n    list.push(i);\r\n  }\r\n  return list;\r\n};\r\n\r\nconst Pagination = props => {\r\n  const paginationArray = getPaginationArray(props.currentPage, props.pages);\r\n\r\n  return (\r\n    <ul onClick={props.handleClick} className=\"pagination\">\r\n      {paginationArray.map(pageNumber => (\r\n        <li\r\n          key={pageNumber}\r\n          className={classNames(\"pagination-item\", {\r\n            active: pageNumber === props.currentPage\r\n          })}\r\n        >\r\n          {pageNumber}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getCharacters } from \"../../api/api\";\r\n\r\nimport { Filters } from \"../Filters\";\r\n\r\nimport { Character } from \"../Character/\";\r\n\r\nimport { Pagination } from \"../Pagination\";\r\n\r\nimport loaderImage from \"../../images/spinner.svg\";\r\n\r\nimport \"./Characters.css\";\r\n\r\nclass Characters extends Component {\r\n  state = {\r\n    search: \"\",\r\n    gender: \"\",\r\n    species: \"\",\r\n    characters: [],\r\n    currentPage: 1,\r\n    isLoaded: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getCharacters();\r\n\r\n    this.setState({\r\n      characters: list.results,\r\n      pages: list.info.pages,\r\n      currentPage: list.info.currentPage,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  handlePaginationClick = async event => {\r\n    const clickedPageNumber = +event.target.textContent;\r\n\r\n    await this.setState({\r\n      isLoaded: false,\r\n      currentPage: clickedPageNumber\r\n    });\r\n\r\n    const reqAttributes = this.getObjectForRequest(this.state);\r\n\r\n    const list = await getCharacters(reqAttributes);\r\n\r\n    this.setState({\r\n      characters: list.results,\r\n      pages: list.info.pages,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = async event => {\r\n    const reqAttributes = this.getObjectForRequest(this.state);\r\n\r\n    event.preventDefault();\r\n\r\n    this.setState({ isLoaded: false });\r\n\r\n    const list = await getCharacters(reqAttributes);\r\n\r\n    this.setState({\r\n      characters: list.results,\r\n      pages: list.info.pages,\r\n      currentPage: list.info.currentPage,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  getObjectForRequest = ({ search, gender, species, currentPage }) => ({\r\n    name: search,\r\n    gender,\r\n    species,\r\n    page: currentPage\r\n  });\r\n\r\n  render() {\r\n    const {\r\n      characters,\r\n      isLoaded,\r\n      search,\r\n      gender,\r\n      species,\r\n      currentPage,\r\n      pages\r\n    } = this.state;\r\n\r\n    if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          <div className=\"preloader\">\r\n            <img src={loaderImage} alt=\"spinner\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Filters\r\n          handleSubmit={this.handleFormSubmit}\r\n          handleChange={this.handleInputChange}\r\n          searchValue={search}\r\n          genderValue={gender}\r\n          speciesValue={species}\r\n        />\r\n        <div className=\"characters characters-background\">\r\n          {characters.map(character => (\r\n            <Character\r\n              key={character.id}\r\n              imageSrc={character.image}\r\n              name={character.name}\r\n              species={character.species}\r\n              gender={character.gender}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Pagination\r\n          handleClick={this.handlePaginationClick}\r\n          currentPage={currentPage}\r\n          pages={pages}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;\r\n","import React, { Component } from \"react\";\n\nimport { Route, HashRouter as Router } from \"react-router-dom\";\n\nimport { Header } from \"../Header\";\n\nimport { Home } from \"../Home\";\n\nimport { Characters } from \"../Characters/\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/characters/\" component={Characters} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}